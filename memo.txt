## 初期設定
・npm init -y　初期化し、package.jsonを作成するコマンド
・npm install --save-dev http　package-lock.jsonを作成するコマンド
・package.jsonファイルのコードのscriptsの中身を下記に上書きすると
    "scripts": {
         "dev": "node server.js"
    },
・npm run devは、コマンドラインでnode server.jsエンターと同義になる
・Node.js公式ドキュメントhttps://nodejs.org/api/http.html#http

## リロード機能モジュール(コード変更してctrl+c後のlocalhostのリロードの手間を省く)導入
npm install -g nodemon
で実行エラーが出れば管理者権限として　sudo npm install -g nodemon　で実行
成功したら
初期設定で設定したpackage.jsonをさらに上書きする
・package.jsonファイルのコードのscriptsの中身を下記に上書きする(nodemonにする)
    "scripts": {
         "dev": "nodemon server.js" 
    },
## 以降の実行をnpm run devにすると＝nodemon server.jsと同義になる
まだエラーが出る場合は一旦
・npm uninstall nodemon
・sudo npm install -g --force nodemonで実行
・package.jsonファイルのコードのscriptsの中身を下記に上書きする(nodemonにする)
    "scripts": {
         "dev": "nodemon server.js" 
    },
でhtmlを変更してみる前に
・npm run devを実行してみてから
・htmlコードを変更して
> pra_node@1.0.0 dev /Users/lumi/Desktop/pra_node
> nodemon server.js

[nodemon] 3.0.1
[nodemon] to restart at any time, enter `rs`
[nodemon] watching path(s): *.*
[nodemon] watching extensions: js,mjs,cjs,json
[nodemon] starting `node server.js`
server3001のテストとなるので
、server.jsファイルに映ってからわざわざ保存すると
[nodemon] restarting due to changes...
[nodemon] starting `node server.js`
server3001のテストとなるので、
・ローカルホスト3001でリロードすると変更が効く。
・開発効率の良いモジュール